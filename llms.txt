# llms.txt - Gu√≠a de Uso de la API La Liga Tracker

Esta API RESTful permite gestionar partidos de f√∫tbol de La Liga mediante operaciones CRUD y actualizaciones espec√≠ficas. Es consumida desde un frontend HTML est√°tico.

Base URL: http://localhost:8080/api

==========================
üßæ ENDPOINTS DISPONIBLES
==========================

GET /matches
‚Üí Retorna todos los partidos en la base de datos.

GET /matches/:id
‚Üí Retorna un partido espec√≠fico por su ID.

POST /matches
‚Üí Crea un nuevo partido.
  ‚ûú Requiere un JSON con los siguientes campos:
     {
       "homeTeam": "Equipo Local",
       "awayTeam": "Equipo Visitante",
       "matchDate": "YYYY-MM-DD"
     }

PUT /matches/:id
‚Üí Actualiza un partido existente por ID.
  ‚ûú Requiere el mismo cuerpo JSON que POST.

DELETE /matches/:id
‚Üí Elimina un partido de la base de datos.

PATCH /matches/:id/goals
‚Üí Incrementa en 1 el n√∫mero de goles del partido.

PATCH /matches/:id/yellowcards
‚Üí Incrementa en 1 el n√∫mero de tarjetas amarillas.

PATCH /matches/:id/redcards
‚Üí Incrementa en 1 el n√∫mero de tarjetas rojas.

PATCH /matches/:id/extratime
‚Üí Establece el tiempo extra del partido.
  ‚ûú Se puede enviar un JSON:
     {
       "extraTime": "7 minutos"
     }
  ‚ûú Si no se env√≠a nada, se asigna por defecto: `"5 minutos"`.

==========================
üåê CORS ACTIVADO
==========================

El backend incluye configuraci√≥n CORS global, permitiendo solicitudes desde cualquier origen.
Se aceptan m√©todos: GET, POST, PUT, DELETE, PATCH y OPTIONS.

==========================
üñ•Ô∏è USO DESDE EL FRONTEND
==========================

El archivo `LaLigaTracker.html` permite interactuar con todos los endpoints mencionados.
Este archivo se abre localmente desde el navegador y se comunica con el backend en `localhost:8080`.

==========================
üõ†Ô∏è CONEXI√ìN A BASE DE DATOS
==========================

La base de datos `liga_db` se gestiona mediante MySQL.
El script `init.sql` define la estructura y carga datos iniciales.

==========================
üß™ PRUEBAS
==========================

Se puede testear la API con herramientas como:

‚Ä¢ Hoppscotch: https://hoppscotch.io (no se uso)
‚Ä¢ Postman: https://www.postman.com/ (ya se cre√≥ una colecci√≥n):
  https://danielbarillas.postman.co/workspace/Daniel-Barillas's-Workspace~9102d261-b50b-49a8-8c55-1271f1db1d04/collection/43570440-52531523-664e-4266-8969-33c5665dfd42?action=share&creator=43570440

Tambi√©n se puede importar la colecci√≥n desde `swagger.yaml`.

==========================
üë®‚Äçüíª AUTOR
==========================

‚Ä¢ Nombre: Pablo Daniel Barillas Moreno  
‚Ä¢ Carn√©: 22193